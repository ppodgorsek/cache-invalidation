@startuml

participant "Somewhere in the application" #white
participant "InvalidationManager"
participant "InvalidationProcessor 1" #lightgreen
participant "InvalidationCollector 1" #lightgreen

"Somewhere in the application" -> "InvalidationManager": addInvalidationEntry(InvalidationEntry entry)
activate InvalidationManager

"InvalidationManager" -> "InvalidationProcessor 1": getInvalidationCollector()
activate "InvalidationProcessor 1"
"InvalidationProcessor 1" --> "InvalidationManager"
deactivate "InvalidationProcessor 1"

"InvalidationManager" -> "InvalidationCollector 1": addInvalidationEntry(InvalidationEntry entry)
activate "InvalidationCollector 1"
"InvalidationCollector 1" --> "InvalidationManager"
deactivate "InvalidationCollector 1"

"InvalidationManager" --> "Somewhere in the application"
deactivate InvalidationManager

...

"Somewhere in the application" -> "InvalidationManager": addInvalidationEntries(Collection<InvalidationEntry> entries)
activate InvalidationManager

"InvalidationManager" -> "InvalidationProcessor 1": getInvalidationCollector()
activate "InvalidationProcessor 1"
"InvalidationProcessor 1" --> "InvalidationManager"
deactivate "InvalidationProcessor 1"

"InvalidationManager" -> "InvalidationCollector 1": addInvalidationEntries(Collection<InvalidationEntry> entries)
activate "InvalidationCollector 1"
"InvalidationCollector 1" --> "InvalidationManager"
deactivate "InvalidationCollector 1"

"InvalidationManager" --> "Somewhere in the application"
deactivate InvalidationManager

@enduml